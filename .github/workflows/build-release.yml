name: Build and Release APK

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: KEYTOOL

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build React project
        run: npm run build

      - name: Install Capacitor CLI
        run: npm install @capacitor/cli

      - name: Copy web assets to native project
        run: npx cap copy

      - name: Sync Capacitor plugins
        run: npx cap sync

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android dependencies
        run: |
          cd android
          ./gradlew dependencies

      - name: Clean project
        run: |
          cd android
          ./gradlew clean

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > arosaj-key.jks

      - name: Align APK
        run: |
          ${ANDROID_HOME}/build-tools/$(ls ${ANDROID_HOME}/build-tools | sort -V | tail -n 1)/zipalign -v 4 android/app/build/outputs/apk/release/app-release-unsigned.apk android/app/build/outputs/apk/release/app-release.apk

      - name: Sign APK with apksigner
        run: |
          ${ANDROID_HOME}/build-tools/$(ls ${ANDROID_HOME}/build-tools | sort -V | tail -n 1)/apksigner sign --ks arosaj-key.jks --ks-key-alias ${{ secrets.KEY_ALIAS }} --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} --key-pass pass:${{ secrets.KEY_PASSWORD }} android/app/build/outputs/apk/release/app-release.apk

      - name: Verify APK Signature
        run: |
          ${ANDROID_HOME}/build-tools/$(ls ${ANDROID_HOME}/build-tools | sort -V | tail -n 1)/apksigner verify android/app/build/outputs/apk/release/app-release.apk

      - name: List APK files
        run: |
          echo "Listing APK files in the release directory:"
          ls -al android/app/build/outputs/apk/release/

      - name: Upload APK to release assets
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: app-release.apk
          path: ./workflow-artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./workflow-artifacts/app-release.apk
          asset_name: arosaj.apk
          asset_content_type: application/vnd.android.package-archive
